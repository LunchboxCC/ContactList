// <auto-generated />
using ContactList.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactList.Server.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220824183603_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ContactList.Shared.Contact", b =>
                {
                    b.Property<long>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ContactId"), 1L, 1);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1L,
                            EmailAddress = "beoulve.iv@gmail.com",
                            FirstName = "Ramza",
                            LastName = "Beoulve",
                            PhoneNumber = ""
                        },
                        new
                        {
                            ContactId = 2L,
                            EmailAddress = "agrias.oaks@gmail.com",
                            FirstName = "Agrias",
                            LastName = "Oaks",
                            PhoneNumber = "+44 128 478 888"
                        },
                        new
                        {
                            ContactId = 3L,
                            EmailAddress = "",
                            FirstName = "Delita",
                            LastName = "Heiral",
                            PhoneNumber = "+421 784 364 144"
                        },
                        new
                        {
                            ContactId = 4L,
                            EmailAddress = "o-d@hotmail.com",
                            FirstName = "Olan",
                            LastName = "Durai",
                            PhoneNumber = "+420 608 058 058"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
